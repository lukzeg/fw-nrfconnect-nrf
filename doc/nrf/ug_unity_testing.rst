.. _ug_unity_testing:

Testing with Unity and CMock
############################

Unity is a C unit test framework. Cmock is a framework for generation of mocks
based on a header API. Support for CMock is integrated into Unity.

|NCS| provides support for writing unit tests using Unity and CMock. Test
runner file and mock files are automatically generated by CMake. Test can be
executed on `native_posix` board.

Setting up unit test
--------------------

Example test can be found in :file:`tests/unity/example_test`.
:file:`tests/unity/example_test/CMakeLists.txt` shows how to setup generation
of test runner file and mocks. In order to run unit test enable Unity module
(:option:`CONFIG_UNITY`) and module under test. Module under test and all
dependencies will be enabled and compiled into the binary, even the mocked
modules. Linker will replace all calls to mocked API with mock implementation
using wrapping feature (:code:`-Wl,--wrap=foo` replaces every call to
:code:`foo()` with call to :code:`__wrap_foo()`). Because of that, mock
functions are prefixed with :code:`__wrap` (:code:`__wrap_foo_Expect()`
instead of :code:`foo_Expect()`).

APIs that should be mocked in given test are specified in :file:`CMakeLists.txt`
by calling :code:`cmock_handle` with header file and optional header relative
path (e.g. bluetooth is relative path for gatt.h if included as
:code:`#include <bluetooth/gatt.h>`) as arguments.

  .. code-block:: none

     cmock_handle(${ZEPHYR_BASE}/include/bluetooth/gatt.h bluetooth)

Test runner file is generated from file containing tests (Unity treats all
functions prefixed with `test_` as tests).

  .. code-block:: none

     test_runner_generate(src/example_test.c)

Running the test
----------------

Following sequence of commands generates the test project (with test runner and
mocks) and runs it.

  .. code-block:: none

     west build -b native_posix
     west build -t run

Note that after adding a new test function must be re-generated. Cleaning,
generation and running can be combined into single command (called in test
project directory:

  .. code-block:: none

     rm -r build | west build -b native_posix -t run

